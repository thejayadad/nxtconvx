'use client';

import { api } from '@/convex/_generated/api'; // Importing the API generated by Convex
import { useMutation } from 'convex/react';
import { useState } from 'react';
import CategorySelection from './category-selection'; // Importing CategorySelection component

const PostForm = () => {
  // Use the mutation hook from Convex for creating a post
  const createPost = useMutation(api.post.createPost);

  // Form state to manage input fields
  const [formValues, setFormValues] = useState({
    title: '',
    description: '',
    category: '',
  });

  // Form submission handler
  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    // Send the form data to the server using the createPost mutation
    try {
      await createPost(formValues);
      // After successful submission, reset the form
      setFormValues({ title: '', description: '', category: '' });
      alert('Post created successfully!');
    } catch (error) {
      // If an error occurs, show an error message
      console.log("Error " + error);
      alert('Something went wrong. Please try again.');
    }
  };

  // Handle form field changes
  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setFormValues((prev) => ({
      ...prev,
      [name]: value,
    }));
  };

  // Handle category selection
  const handleCategorySelect = (category: string) => {
    setFormValues((prev) => ({
      ...prev,
      category: category, // Update the category field in the form
    }));
  };

  return (
    <div>
      <form onSubmit={handleSubmit} className="max-w-lg mx-auto p-6 bg-white rounded-lg shadow-md">
        <div>
          <input
            type="text"
            name="title"
            id="title"
            placeholder="Enter post title..."
            value={formValues.title}
            onChange={handleChange}
            required
            className="w-full p-3 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500"
          />
        </div>
        <div>
          <textarea
            name="description"
            id="description"
            placeholder="Enter post description..."
            value={formValues.description}
            onChange={handleChange}
            required
            rows={4}
            className="w-full p-3 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500"
          />
        </div>
        <div>
          {/* Category Selection Component */}
          <CategorySelection onSelect={handleCategorySelect} selectedCategory={formValues.category} />
        </div>
        <div>
          <button
            type="submit"
            className="w-full bg-blue-600 text-white p-3 rounded-md shadow-lg hover:bg-blue-700 transition-all"
          >
            Create Post
          </button>
        </div>
      </form>
    </div>
  );
};

export default PostForm;
